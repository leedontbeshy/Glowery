import { prisma } from "../src/common/db/prisma";

//npx ts-node -r tsconfig-paths/register test/prisma.test.ts

async function testPrismaConnection() {
  console.log("====================================");
  console.log("Testing Prisma Connection...");
  console.log("NODE_ENV =", process.env.NODE_ENV);
  console.log("====================================\n");

  try {
    // Test 1: Ki·ªÉm tra k·∫øt n·ªëi c∆° b·∫£n
    console.log("‚úì Test 1: Checking basic connection...");
    await prisma.$connect();
    console.log("‚úì Connected to database successfully!\n");

    // Test 2: Test query ƒë∆°n gi·∫£n v·ªõi categories
    console.log("‚úì Test 2: Fetching categories...");
    const categories = await prisma.categories.findMany({
      take: 5,
      select: {
        id: true,
        name: true,
        slug: true,
        is_active: true,
      },
    });
    console.log(`‚úì Found ${categories.length} categories:`);
    console.log(categories);
    console.log();

    // Test 3: Test query v·ªõi users
    console.log("‚úì Test 3: Fetching users...");
    const users = await prisma.users.findMany({
      take: 5,
      select: {
        id: true,
        username: true,
        email: true,
        role: true,
        created_at: true,
      },
    });
    console.log(`‚úì Found ${users.length} users:`);
    console.log(users);
    console.log();



    console.log("====================================");
    console.log("‚úì All tests passed successfully! üéâ");
    console.log("====================================");
  } catch (err) {
    console.error("====================================");
    console.error("‚úó Connection or query failed:");
    console.error(err);
    console.error("====================================");
  } finally {
    // ƒê√≥ng k·∫øt n·ªëi ƒë·ªÉ ch∆∞∆°ng tr√¨nh kh√¥ng treo
    await prisma.$disconnect();
    console.log("\n‚úì Prisma disconnected.");
  }
}

// Ch·∫°y test
testPrismaConnection();
